mixin surface(which)
    table.surface.ui.celled.structured.table
        tbody
            tr
                td(style="background-color: {{cube.#{which}.blocks[0][0].color}};") {{cube.#{which}.blocks[0][0].label}}
                td(style="background-color: {{cube.#{which}.blocks[0][1].color}};") {{cube.#{which}.blocks[0][1].label}}
            tr
                td(style="background-color: {{cube.#{which}.blocks[1][0].color}};") {{cube.#{which}.blocks[1][0].label}}
                td(style="background-color: {{cube.#{which}.blocks[1][1].color}};") {{cube.#{which}.blocks[1][1].label}}

mixin firstRow()
    tr
        td
        td
            block
        td

mixin secondRow()
    + firstRow
        block

mixin thirdRow()
    tr
        block

mixin fourthRow()
    + firstRow
        block

mixin cubeTable()
    table&attributes(attributes)
        tbody
            block

mixin realCubeTable()
    + cubeTable
        + firstRow
            + surface('back')
        + secondRow
            + surface('top')
        + thirdRow
            td
                + surface('left')
            td
                + surface('front')
            td
                + surface('right')
        + fourthRow
            + surface('under')

mixin buttonRow
    div.ui.buttons
        block

mixin or
    div.or(data-text="或")

mixin buttonCubeTable()
    + cubeTable&attributes(attributes)
        tr
            td
                button.ui.button(ng-click="cube.perspectiveUp()") Perspective Up
            td
                + buttonRow
                    button.violet.ui.button(ng-click="cube.B()") B
                    + or
                    button.ui.positive.button(ng-click="cube.B_()") B'
            td
                button.ui.button(ng-click="cube.perspectiveDown()") Perspective Down
        tr
            td
                button.ui.button(ng-click="cube.perspectiveLeft()") Perspective Left
            td
                + buttonRow
                    button.violet.ui.button(ng-click="cube.U()") U
                    + or
                    button.ui.positive.button(ng-click="cube.U_()") U'
            td
                button.ui.button(ng-click="cube.perspectiveRight()") Perspective Right
        + thirdRow
            td
                + buttonRow
                    button.violet.ui.button(ng-click="cube.L()") L
                    + or
                    button.ui.positive.button(ng-click="cube.L_()") L'
            td
                + buttonRow
                    button.violet.ui.button(ng-click="cube.F()") F
                    + or
                    button.ui.positive.button(ng-click="cube.F_()") F'
            td
                + buttonRow
                    button.violet.ui.button(ng-click="cube.R()") R
                    + or
                    button.ui.positive.button(ng-click="cube.R_()") R'
        tr
            td
                button.ui.button(ng-click="resetCube()") 还原
            td
                + buttonRow
                    button.violet.ui.button(ng-click="cube.D()") D
                    + or
                    button.ui.positive.button(ng-click="cube.D_()") D'
            td
                button.ui.button(ng-click="randomizeCube()") 随机化


+ realCubeTable
div.ui.horizontal.divider
div
    form.ui.form(ng-class="{'loading': doing}")
        div.inline.field
            label 状态:
            input(type="text", style="width: 230px;", ng-model="state.label")
            | &nbsp;
            button.ui.red.button(type="submit", ng-click="generate()") 生成
        div.inline.field
            label 步骤:
            input(type="text", style="width: 230px;", ng-model="state.steps")
            | &nbsp;
            button.ui.red.button(type="submit", ng-click="execute()", ng-disabled="!executeButtonValid") 运行
div
    | {{cube.toString()}}
    | &nbsp;
    form.ui.form(ng-class="{'loading': doing}")
        button.ui.red.button(ng-click="traverse()") 遍历
        button.ui.purple.button(ng-click="solve()") 求解
        span(ng-show="result") 共需 {{result.l}} 步还原
div.ui.divider
form.ui.form(ng-class="{'loading': doing}")
    + buttonCubeTable.ui.celled.padded.table